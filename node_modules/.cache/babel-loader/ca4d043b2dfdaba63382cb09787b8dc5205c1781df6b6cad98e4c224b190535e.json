{"ast":null,"code":"var _jsxFileName = \"S:\\\\Apurrv\\\\React\\\\my-blog\\\\src\\\\Home.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Bloglist from \"./Bloglist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [blogs, setBlogs] = useState(null);\n  const handleDelete = id => {\n    const newBlogs = blogs.filter(blog => blog.id !== id);\n    setBlogs(newBlogs);\n  };\n  useEffect(() => {\n    fetch('http://localhost:8000/blogs').then(res => {\n      return res.json();\n    }).then(data => {\n      // console.log(data);\n      setBlogs(data);\n    });\n  }, []);\n\n  // npx json-server --watch data/db.json --port 8000\n  /*\r\n      http://localhost:8000/blogs\r\n      /blogs          GET     fetch all blogs\r\n      /blogs/{id}     GET     fetch a single data\r\n      /blogs          POST    add a new blog\r\n      /blogs/{id}     DELETE  delete a blog\r\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: blogs && /*#__PURE__*/_jsxDEV(Bloglist, {\n      blogs: blogs,\n      title: \"All Blogs\",\n      handleDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 24\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"6rr11fjeM9cORHprkkuYYUkh7Iw=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","Bloglist","jsxDEV","_jsxDEV","Home","_s","blogs","setBlogs","handleDelete","id","newBlogs","filter","blog","fetch","then","res","json","data","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["S:/Apurrv/React/my-blog/src/Home.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Bloglist from \"./Bloglist\";\r\n\r\n\r\nconst Home = () => {\r\n\r\n    const [blogs, setBlogs] = useState(null)\r\n\r\n    const handleDelete = (id) => {\r\n        const newBlogs = blogs.filter(blog => blog.id !== id);\r\n        setBlogs(newBlogs);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:8000/blogs')\r\n            .then(res => {\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                // console.log(data);\r\n                setBlogs(data);\r\n            });\r\n    }, [])\r\n\r\n    // npx json-server --watch data/db.json --port 8000\r\n    /*\r\n        http://localhost:8000/blogs\r\n        /blogs          GET     fetch all blogs\r\n        /blogs/{id}     GET     fetch a single data\r\n        /blogs          POST    add a new blog\r\n        /blogs/{id}     DELETE  delete a blog\r\n    */\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            { blogs && <Bloglist blogs={blogs} title=\"All Blogs\" handleDelete={handleDelete} /> }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMQ,YAAY,GAAIC,EAAE,IAAK;IACzB,MAAMC,QAAQ,GAAGJ,KAAK,CAACK,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACH,EAAE,KAAKA,EAAE,CAAC;IACrDF,QAAQ,CAACG,QAAQ,CAAC;EACtB,CAAC;EAEDX,SAAS,CAAC,MAAM;IACZc,KAAK,CAAC,6BAA6B,CAAC,CAC/BC,IAAI,CAACC,GAAG,IAAI;MACT,OAAOA,GAAG,CAACC,IAAI,CAAC,CAAC;IACrB,CAAC,CAAC,CACDF,IAAI,CAACG,IAAI,IAAI;MACV;MACAV,QAAQ,CAACU,IAAI,CAAC;IAClB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;;EAEI,oBACId,OAAA;IAAKe,SAAS,EAAC,MAAM;IAAAC,QAAA,EACfb,KAAK,iBAAIH,OAAA,CAACF,QAAQ;MAACK,KAAK,EAAEA,KAAM;MAACc,KAAK,EAAC,WAAW;MAACZ,YAAY,EAAEA;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClF,CAAC;AAEd,CAAC;AAAAnB,EAAA,CAlCKD,IAAI;AAAAqB,EAAA,GAAJrB,IAAI;AAoCV,eAAeA,IAAI;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}