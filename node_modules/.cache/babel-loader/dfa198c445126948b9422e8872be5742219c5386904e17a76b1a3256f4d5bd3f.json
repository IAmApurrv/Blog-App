{"ast":null,"code":"var _jsxFileName = \"S:\\\\Apurrv\\\\React\\\\my-blog\\\\src\\\\Home.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Bloglist from \"./Bloglist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [blogs, setBlogs] = useState(null);\n  const [isWaiting, setIsWaiting] = useState(true);\n  useEffect(() => {\n    fetch('http://localhost:8000/blogs').then(res => {\n      return res.json();\n    }).then(data => {\n      // console.log(data);\n      setBlogs(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [isWaiting && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 28\n    }, this), blogs && /*#__PURE__*/_jsxDEV(Bloglist, {\n      blogs: blogs,\n      title: \"All Blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"uaRmbYweyRaJ/BMh2BL9X+8zd9s=\");\n_c = Home;\nexport default Home;\n\n// npx json-server --watch data/db.json --port 8000\n/*\r\n    http://localhost:8000/blogs\r\n    /blogs          GET     fetch all blogs\r\n    /blogs/{id}     GET     fetch a single data\r\n    /blogs          POST    add a new blog\r\n    /blogs/{id}     DELETE  delete a blog\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","Bloglist","jsxDEV","_jsxDEV","Home","_s","blogs","setBlogs","isWaiting","setIsWaiting","fetch","then","res","json","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","_c","$RefreshReg$"],"sources":["S:/Apurrv/React/my-blog/src/Home.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Bloglist from \"./Bloglist\";\r\n\r\n\r\nconst Home = () => {\r\n\r\n    const [blogs, setBlogs] = useState(null)\r\n    const [isWaiting, setIsWaiting] = useState(true)\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:8000/blogs')\r\n            .then(res => {\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                // console.log(data);\r\n                setBlogs(data);\r\n            });\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            { isWaiting && <div>Loading...</div> }\r\n            {blogs && <Bloglist blogs={blogs} title=\"All Blogs\" />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n\r\n// npx json-server --watch data/db.json --port 8000\r\n/*\r\n    http://localhost:8000/blogs\r\n    /blogs          GET     fetch all blogs\r\n    /blogs/{id}     GET     fetch a single data\r\n    /blogs          POST    add a new blog\r\n    /blogs/{id}     DELETE  delete a blog\r\n*/"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACZW,KAAK,CAAC,6BAA6B,CAAC,CAC/BC,IAAI,CAACC,GAAG,IAAI;MACT,OAAOA,GAAG,CAACC,IAAI,CAAC,CAAC;IACrB,CAAC,CAAC,CACDF,IAAI,CAACG,IAAI,IAAI;MACV;MACAP,QAAQ,CAACO,IAAI,CAAC;IAClB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIX,OAAA;IAAKY,SAAS,EAAC,MAAM;IAAAC,QAAA,GACfR,SAAS,iBAAIL,OAAA;MAAAa,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACnCd,KAAK,iBAAIH,OAAA,CAACF,QAAQ;MAACK,KAAK,EAAEA,KAAM;MAACe,KAAK,EAAC;IAAW;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEd,CAAC;AAAAf,EAAA,CAtBKD,IAAI;AAAAkB,EAAA,GAAJlB,IAAI;AAwBV,eAAeA,IAAI;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}